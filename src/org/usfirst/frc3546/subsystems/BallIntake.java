// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3546.subsystems;

import edu.wpi.first.wpilibj.Relay;
import org.usfirst.frc3546.RobotMap;
import org.usfirst.frc3546.commands.*;
import edu.wpi.first.wpilibj.AnalogPotentiometer;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.TalonSRX;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class BallIntake extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final AnalogPotentiometer sweeperArmPositionPotentiometer = RobotMap.ballIntakeSweeperArmPositionPotentiometer;
    private final SpeedController sweeperArmPositionMotor = RobotMap.ballIntakeSweeperArmPositionMotor;
    private final Relay sweeperBarRotationMotor = RobotMap.ballIntakeSweeperBarRotationMotor;
    public final static double ARM_SPEED = .7;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    public void sweeperBarIn () {
        sweeperBarRotationMotor.set(Relay.Value.kForward);
    }

    public void sweeperBarOut () {
        sweeperBarRotationMotor.set(Relay.Value.kReverse);
    }

    public void sweeperBarStop () {
        sweeperBarRotationMotor.set(Relay.Value.kOff);
    }

    public void armUp() {
        sweeperArmPositionMotor.set(ARM_SPEED);
    }

    public void armDown () {
        sweeperArmPositionMotor.set(-ARM_SPEED);
    }

    public void armStop ()  {
        sweeperArmPositionMotor.set(0);
    }
}

